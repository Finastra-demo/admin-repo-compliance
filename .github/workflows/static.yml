# Optional: Separate Deploy Workflow (if you prefer to keep deployment separate)
# This is an alternative to the consolidated approach above
name: Deploy Compliance Dashboard

on:
  # Trigger after main workflow completes successfully
  workflow_run:
    workflows: ["Repository Compliance Checker"]
    types:
      - completed
    branches:
      - main
  
  # Allow manual deployment
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    # Only deploy on successful workflow runs or manual trigger
    if: >
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download Artifacts from Main Workflow
        if: github.event_name == 'workflow_run'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "üîç Downloading artifacts from workflow run ${{ github.event.workflow_run.id }}"
          
          # Create artifacts directory
          mkdir -p artifacts
          
          # Download artifacts using GitHub CLI (more reliable than third-party actions)
          gh run download ${{ github.event.workflow_run.id }} \
            --name compliance-report \
            --dir artifacts/ || {
            echo "‚ö†Ô∏è Could not download artifacts, checking for files in repo..."
            ls -la
          }
          
          echo "üìÅ Downloaded artifacts:"
          ls -la artifacts/ || echo "No artifacts directory"
      
      - name: Prepare Dashboard Files
        run: |
          echo "üèóÔ∏è Preparing dashboard files..."
          
          # Look for dashboard files in different locations
          dashboard_found=false
          report_found=false
          
          # Check artifacts directory first
          if [ -f "artifacts/compliance-dashboard.html" ]; then
            echo "‚úÖ Found dashboard in artifacts"
            cp artifacts/compliance-dashboard.html compliance-dashboard.html
            dashboard_found=true
          fi
          
          if [ -f "artifacts/compliance-report.json" ]; then
            echo "‚úÖ Found report in artifacts"
            cp artifacts/compliance-report.json compliance-report.json
            report_found=true
          fi
          
          # If no artifacts, create a placeholder dashboard
          if [ "$dashboard_found" = false ]; then
            echo "‚ö†Ô∏è No dashboard found, creating placeholder..."
            cat > compliance-dashboard.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Compliance Dashboard - Processing</title>
              <meta http-equiv="refresh" content="60">
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                      background: #f8f9fa;
                      color: #24292f;
                      min-height: 100vh;
                      display: flex;
                      align-items: center;
                      justify-content: center;
                      text-align: center;
                      padding: 20px;
                  }
                  .container {
                      background: white;
                      padding: 60px 40px;
                      border-radius: 12px;
                      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
                      max-width: 600px;
                      border-left: 6px solid #ffc107;
                  }
                  h1 { font-size: 2.5rem; margin-bottom: 20px; color: #0366d6; }
                  .loading { color: #ffc107; font-size: 1.3rem; margin: 20px 0; font-weight: 600; }
                  .spinner {
                      border: 4px solid #f3f3f3;
                      border-top: 4px solid #ffc107;
                      border-radius: 50%;
                      width: 40px;
                      height: 40px;
                      animation: spin 1s linear infinite;
                      margin: 20px auto;
                  }
                  @keyframes spin {
                      0% { transform: rotate(0deg); }
                      100% { transform: rotate(360deg); }
                  }
                  .links { margin-top: 30px; }
                  .links a {
                      display: inline-block;
                      margin: 10px;
                      padding: 12px 24px;
                      background: #0366d6;
                      color: white;
                      text-decoration: none;
                      border-radius: 6px;
                      font-weight: 600;
                      transition: background 0.2s;
                  }
                  .links a:hover { background: #0256cc; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üè¢ Compliance Dashboard</h1>
                  <div class="spinner"></div>
                  <p class="loading">Dashboard is being generated...</p>
                  <p>The compliance checker is running and will update this dashboard shortly.</p>
                  <p><strong>This page will refresh automatically.</strong></p>
                  <div class="links">
                      <a href="https://github.com/${{ github.repository }}/actions" target="_blank">üîß View Workflows</a>
                      <a href="https://github.com/${{ github.repository }}/issues" target="_blank">üìã Issues</a>
                  </div>
              </div>
          </body>
          </html>
          EOF
          fi
          
          echo "üìÅ Final files:"
          ls -la *.html *.json 2>/dev/null || echo "No dashboard files found"
      
      - name: Create Pages Structure
        run: |
          echo "üèóÔ∏è Creating Pages directory structure..."
          mkdir -p _site
          
          # Copy main dashboard
          cp compliance-dashboard.html _site/index.html
          
          # Copy JSON report if available
          if [ -f "compliance-report.json" ]; then
            cp compliance-report.json _site/
          fi
          
          # Create reports index
          cat > _site/reports.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Compliance Reports</title>
              <style>
                  body { 
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                      padding: 40px; background: #f8f9fa;
                  }
                  .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); }
                  h1 { color: #0366d6; margin-bottom: 30px; }
                  .file-link { 
                      display: block; margin: 15px 0; padding: 20px; background: #f6f8fa; text-decoration: none; 
                      border-radius: 8px; border-left: 4px solid #0366d6; transition: background 0.2s;
                  }
                  .file-link:hover { background: #e1f5fe; }
                  .file-title { font-weight: 600; font-size: 1.1rem; color: #24292f; }
                  .file-desc { color: #586069; margin-top: 5px; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üìä Repository Compliance Reports</h1>
                  <a href="index.html" class="file-link">
                      <div class="file-title">üìà Interactive Dashboard</div>
                      <div class="file-desc">Visual compliance dashboard with metrics and charts</div>
                  </a>
                  <a href="compliance-report.json" class="file-link">
                      <div class="file-title">üìÑ JSON Report</div>
                      <div class="file-desc">Raw compliance data for analysis</div>
                  </a>
                  <a href="https://github.com/${{ github.repository }}/actions" class="file-link" target="_blank">
                      <div class="file-title">üîß Workflows</div>
                      <div class="file-desc">View workflow runs and logs</div>
                  </a>
              </div>
          </body>
          </html>
          EOF
          
          echo "üìÅ Pages structure:"
          ls -la _site/
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Output Success
        run: |
          echo "üéâ Dashboard deployed successfully!"
          echo "üìä URL: ${{ steps.deployment.outputs.page_url }}"
          echo "üìÑ Reports: ${{ steps.deployment.outputs.page_url }}reports.html"
